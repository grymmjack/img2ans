''
' Initialize the mouse
'
SUB MOUSE_init
    MOUSE.status.stopped_drag = 0
    MOUSE.status.started_drag = 0
END SUB


''
' Checks if the mouse has been dragged
' @return INTEGER -1 if dragged 0 if not
'
FUNCTION MOUSE_dragged%
    MOUSE_dragged = MOUSE.status.b1_down AND (MOUSE.status.drag_distance.x <> 0 OR MOUSE.status.drag_distance.y <> 0)
END FUNCTION


''
' Update the mouse states
'
SUB MOUSE_update
    ' track old state
    MOUSE.old_state = MOUSE.new_state

    DO WHILE _MOUSEINPUT
        ' track new state
        MOUSE.new_state.pos.x = _MOUSEX
        MOUSE.new_state.pos.y = _MOUSEY
        MOUSE.new_state.b1    = _MOUSEBUTTON(1)
        MOUSE.new_state.b2    = _MOUSEBUTTON(2)
        MOUSE.new_state.b3    = _MOUSEBUTTON(3)
        MOUSE.new_state.wheel = _MOUSEWHEEL
    LOOP
END SUB


''
' Update the mouse states using InForm-PE READ-ONLY 
'
SUB IMOUSE_update
    ' InForm shimmed mouse vars if not in use, create dummies instead
    ' Assume if __UI_MouseLeft% is not defined, not doing InForm stuff
    $IF __UI_MouseLeft = UNDEFINED THEN
        DIM AS INTEGER __UI_MouseWheel
        DIM AS INTEGER __UI_MouseLeft
        DIM AS INTEGER __UI_MouseTop
        DIM AS _BYTE __UI_MouseButton1
        DIM AS _BYTE __UI_MouseButton2
        DIM AS _BYTE __UI_MouseButton3
    $END IF

    ' track old state
    MOUSE.old_state = MOUSE.new_state

    ' track new state
    MOUSE.new_state.pos.x = __UI_MouseLeft%
    MOUSE.new_state.pos.y = __UI_MouseTop%
    MOUSE.new_state.b1    = __UI_MouseButton1%%
    MOUSE.new_state.b2    = __UI_MouseButton2%%
    MOUSE.new_state.b3    = 0'__UI_MouseButton3%%
    MOUSE.new_state.wheel = __UI_MouseWheel%
END SUB


''
' Refresh mouse status
'
SUB MOUSE_refresh
    ' changes
    MOUSE.status.x_changed      = MOUSE.old_state.pos.x <> MOUSE.new_state.pos.x
    MOUSE.status.y_changed      = MOUSE.old_state.pos.y <> MOUSE.new_state.pos.y
    MOUSE.status.b1_changed     = MOUSE.old_state.b1 <> MOUSE.new_state.b1
    MOUSE.status.b2_changed     = MOUSE.old_state.b2 <> MOUSE.new_state.b2
    MOUSE.status.b3_changed     = MOUSE.old_state.b3 <> MOUSE.new_state.b3
    MOUSE.status.wheel_changed  = MOUSE.old_state.wheel <> MOUSE.new_state.wheel

    ' moving
    MOUSE.status.moving         = MOUSE.status.x_changed OR MOUSE.status.y_changed
    MOUSE.status.moving_left    = MOUSE.new_state.pos.x < MOUSE.old_state.pos.x
    MOUSE.status.moving_right   = MOUSE.new_state.pos.x > MOUSE.old_state.pos.x
    MOUSE.status.moving_up      = MOUSE.new_state.pos.y < MOUSE.old_state.pos.y
    MOUSE.status.moving_down    = MOUSE.new_state.pos.y > MOUSE.old_state.pos.y

    ' buttons
    MOUSE.status.b1_down        = MOUSE.new_state.b1
    MOUSE.status.b2_down        = MOUSE.new_state.b2
    MOUSE.status.b3_down        = MOUSE.new_state.b3
    MOUSE.status.b1_up          = NOT MOUSE.new_state.b1
    MOUSE.status.b2_up          = NOT MOUSE.new_state.b2
    MOUSE.status.b3_up          = NOT MOUSE.new_state.b3
    MOUSE.status.b1_clicked     = MOUSE.old_state.b1 AND NOT MOUSE.new_state.b1
    MOUSE.status.b2_clicked     = MOUSE.old_state.b2 AND NOT MOUSE.new_state.b2
    MOUSE.status.b3_clicked     = MOUSE.old_state.b3 AND NOT MOUSE.new_state.b3

    ' wheel
    MOUSE.status.wheeling_up    = MOUSE.new_state.wheel < 0
    MOUSE.status.wheeling_down  = MOUSE.new_state.wheel > 0
    MOUSE.status.wheeling_stop  = MOUSE.new_state.wheel = 0

    ' dragging and dropping
    MOUSE.status.dragging_left  = MOUSE.status.b1_down AND MOUSE.status.moving_left
    MOUSE.status.dragging_right = MOUSE.status.b1_down AND MOUSE.status.moving_right
    MOUSE.status.dragging_up    = MOUSE.status.b1_down AND MOUSE.status.moving_up
    MOUSE.status.dragging_down  = MOUSE.status.b1_down AND MOUSE.status.moving_down

    IF MOUSE.status.b1_down AND NOT MOUSE.status.started_drag THEN
        MOUSE.status.started_drag    = TRUE
        MOUSE.status.stopped_drag    = FALSE
        MOUSE.drag_start             = MOUSE.new_state.pos

    ELSEIF MOUSE.status.b1_clicked AND MOUSE.status.started_drag THEN
        MOUSE.status.stopped_drag    = TRUE
        MOUSE.status.started_drag    = FALSE
        MOUSE.drag_stop              = MOUSE.new_state.pos
        MOUSE.status.drag_distance.x = MOUSE.drag_stop.x - MOUSE.drag_start.x
        MOUSE.status.drag_distance.y = MOUSE.drag_stop.y - MOUSE.drag_start.y

    END IF
END SUB
